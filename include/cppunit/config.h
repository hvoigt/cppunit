#ifndef CPPUNIT_CONFIG_H
#define CPPUNIT_CONFIG_H

/* Default configuration for VC++ 6.0.
 * On Unix platform, this file is generated by the configure script.
 *
 * Since we don't have that in everyday VC++, we define this header with
 * reasonable default:
 * - RTTI enabled
 * - compatibility with old assert macro, now replaced with CPPUNIT_ASSERT.
 * - preprocessor can expand expression
 *
 * Define the symbol CPPUNIT_DONT_USE_TYPEINFO to disable RTTI.
 * Define the symbol CPPUNIT_DISABLE_NAKED_ASSERT to disable naked assert.
 */

/* Define to 1 if the compiler supports Run-Time Type Identification */
#ifdef CPPUNIT_DONT_USE_TYPEINFO
#define CPPUNIT_USE_TYPEINFO                0
#else
#define CPPUNIT_USE_TYPEINFO                1
#endif

/* Define to 1 if you wish to have the old-style macros
   assert(), assertEqual(), assertDoublesEqual(), and assertLongsEqual() */
#ifdef CPPUNIT_DISABLE_NAKED_ASSERT
#define CPPUNIT_ENABLE_NAKED_ASSERT         0
#else
#define CPPUNIT_ENABLE_NAKED_ASSERT         1
#endif

/* Define to 1 if the preprocessor expands (#foo) to "foo" (quotes incl.) */
#define CPPUNIT_HAVE_CPP_SOURCEANNOTATION   1


#endif
